import numpy as np
import random
import cv2
import math

class Coloring:


    def intensity_slicing(self, image, n_slices):
      sl=int(255/n_slices)
      inter_val=[0]
      inter_val.append(sl)
      temp=sl
      while(temp<=255):
          temp+=sl
          inter_val.append(temp)
      col=np.zeros((n_slices+1,3))
      for i in range(np.shape(col)[0]):
          for j in range(np.shape(col)[1]):
              col[i,j]=int(random.randint(0, 255))
      image_c=np.zeros((np.shape(image)[0],np.shape(image)[1],3))
      for i in range(np.shape(image)[0]):
          for j in range(np.shape(image)[1]):
              for k in range(len(inter_val)):
                  if(image[i,j]>inter_val[k] and image[i,j]<=inter_val[k+1]):
                      image_c[i][j][0] = col[k][0]
                      image_c[i][j][1] = col[k][1]
                      image_c[i][j][2] = col[k][2]

      return image_c

    def color_transformation(self,image, n_slices, theta):

      sl = int(255 / n_slices)
      inter_val = [0]
      inter_val.append(sl)
      temp = sl
      while (temp <= 255):
          temp += sl
          inter_val.append(temp)
      col = np.zeros((n_slices + 1, 3))
      for i in range(np.shape(col)[0]):
          for j in range(np.shape(col)[1]):
              mid=int((inter_val[i]+inter_val[i+1])/2)
              u=abs(255 * math.sin(mid + theta[j]))
              col[i, j] = int(u)
      image_c = np.zeros((np.shape(image)[0], np.shape(image)[1], 3))
      for i in range(np.shape(image)[0]):
          for j in range(np.shape(image)[1]):
              for k in range(len(inter_val)):
                  if (image[i, j] > inter_val[k] and image[i, j] <= inter_val[k + 1]):
                      image_c[i][j][0] = col[k][0]
                      image_c[i][j][1] = col[k][1]
                      image_c[i][j][2] = col[k][2]


      return image_c



        

